<!DOCTYPE html>
<html>
<head>
    <title>Memory Game</title>
    <link rel="stylesheet" href="/main.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container text-center mt-5">
        <h1 class="mb-4">Memory Game</h1>
        <p class="lead">Remember the sequence of colors.</p>
        <div id="memoryGame" class="mt-4">
            <button class="btn btn-primary btn-lg mb-3" onclick="startGame()">Start Game</button>
            <div id="sequence" class="d-flex justify-content-center mb-3"></div>
            <div id="inputSequence" class="d-flex justify-content-center mb-3"></div>
            <button class="btn btn-success btn-lg mb-3" onclick="checkSequence()">Check Sequence</button>
            <div id="result" class="mt-3"></div>
        </div>

        <!-- Progress Bar -->
        <div class="progress mt-5">
            <div id="progress-bar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"
                data-gameid="<%= gameId %>" data-userid="<%= userName %>"></div>
        </div>
        <p id="time-remaining" class="mt-3">Time remaining: 15 minutes 0 seconds</p>
        <button onclick="window.location.href='/games'">Back to Games</button>
    </div>

    <script>
        let sequence = [];
        let userSequence = [];

        function startGame() {
            sequence = [];
            userSequence = [];
            document.getElementById('sequence').innerHTML = '';
            document.getElementById('inputSequence').innerHTML = '';
            document.getElementById('result').innerHTML = '';
            for (let i = 0; i < 5; i++) {
                let color = ['red', 'green', 'blue', 'yellow'][Math.floor(Math.random() * 4)];
                sequence.push(color);
                let colorDiv = document.createElement('div');
                colorDiv.style.backgroundColor = color;
                colorDiv.style.width = '50px';
                colorDiv.style.height = '50px';
                colorDiv.style.margin = '0 5px';
                colorDiv.style.borderRadius = '50%';
                document.getElementById('sequence').appendChild(colorDiv);
            }
            setTimeout(() => {
                document.getElementById('sequence').innerHTML = '';
                ['red', 'green', 'blue', 'yellow'].forEach(color => {
                    let colorButton = document.createElement('button');
                    colorButton.innerText = color;
                    colorButton.style.backgroundColor = color;
                    colorButton.classList.add('btn', 'btn-secondary', 'm-1');
                    colorButton.style.width = '70px';
                    colorButton.style.height = '70px';
                    colorButton.style.borderRadius = '50%';
                    colorButton.onclick = () => userSequence.push(color);
                    document.getElementById('inputSequence').appendChild(colorButton);
                });
            }, 2000);
        }

        function checkSequence() {
            let result = sequence.every((color, index) => color === userSequence[index]);
            document.getElementById('result').innerText = result ? 'Correct!' : 'Wrong!';
            document.getElementById('result').className = result ? 'text-success' : 'text-danger';
        }

        $(document).ready(function() {
            const gameId = $('#progress-bar').data('gameid');
            const userId = $('#progress-bar').data('userid');
            const maxMinutes = 15;
            let elapsedMinutes = localStorage.getItem(`elapsedMinutes_${gameId}_${userId}`) || 0;
            let secondsRemaining = (maxMinutes - elapsedMinutes) * 60;

            const updateProgressBar = () => {
                const percentage = ((maxMinutes * 60 - secondsRemaining) / (maxMinutes * 60)) * 100;
                $('#progress-bar').css('width', percentage + '%').attr('aria-valuenow', percentage);
                if (secondsRemaining <= 0) {
                    $('#progress-bar').text('Completed');
                } else {
                    const minutes = Math.floor(secondsRemaining / 60);
                    const seconds = Math.round(secondsRemaining % 60); // Round off seconds to the nearest whole number
                    $('#time-remaining').text(`Time remaining: ${minutes} minutes ${seconds} seconds`);
                }
            };

            const saveProgress = () => {
                const updatedElapsedMinutes = (maxMinutes * 60 - secondsRemaining) / 60;
                localStorage.setItem(`elapsedMinutes_${gameId}_${userId}`, updatedElapsedMinutes);
                $.post('/games/progress', { gameId, elapsedMinutes: updatedElapsedMinutes }, (response) => {
                    console.log('Progress saved:', response);
                }).fail((error) => {
                    console.error('Error saving progress:', error);
                });
            };

            // Update the countdown timer every second
            const timerInterval = setInterval(() => {
                if (secondsRemaining > 0) {
                    secondsRemaining--;
                    updateProgressBar();
                } else {
                    clearInterval(timerInterval);
                    $('#time-remaining').text('Completed');
                }
            }, 1000);

            // Save progress every minute
            const progressInterval = setInterval(saveProgress, 60000);

            // Save progress before leaving the page
            $(window).on('beforeunload', function() {
                clearInterval(timerInterval);
                clearInterval(progressInterval);
                saveProgress();
            });

            // Initial update
            updateProgressBar();
        });
    </script>
</body>
</html>
