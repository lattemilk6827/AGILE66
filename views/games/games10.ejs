<!DOCTYPE html>
<html>
<head>
    <title>Coloring Book</title>
    <link rel="stylesheet" href="/main.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js"></script>
</head>
<body>
    <div class="container text-center mt-5">
        <h1>Mindful Garden</h1>
        <canvas id="gardenCanvas" width="800" height="800" class="border mb-3"></canvas>
        <button class="btn btn-primary mt-3" id="plantButton">Plant Something New</button>
        <button class="btn btn-warning mt-3" id="clearButton">Clear Garden</button>
        <div id="message" class="mt-3"></div>
          <!-- Progress Bar -->
    <div class="progress mt-5">
        <div id="progress-bar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"
            data-gameid="<%= gameId %>" data-userid="<%= userName %>"></div>
    </div>
    <p id="time-remaining" class="mt-3">Time remaining: 15 minutes 0 seconds</p>
    <button onclick="window.location.href='/games'">Back to Games</button>
    </div>

  
    <script src="/progressTracker/progress.js"></script>

    <script>
        const canvas = document.getElementById('gardenCanvas');
        const ctx = canvas.getContext('2d');
        const grid = 4;
        const gridSize = canvas.width / grid; 
        var garden = [];
        const plantImages = [
            '/images/plant1.png',
            '/images/plant2.png',
            '/images/plant3.png'
        ];

        
        document.addEventListener('DOMContentLoaded', function() {
            initializeGarden();  // Call initializeGarden right after the page is fully loaded

            function initializeGarden() {
                for (let i = 0; i < grid * grid; i++) {
                    garden.push({ planted: false, img: null });
                }
            }

            function plantNew() {
            // Find the first unoccupied cell
            const index = garden.findIndex(cell => !cell.planted);
            if (index !== -1) {
                const randomImage = plantImages[Math.floor(Math.random() * plantImages.length)];
                const img = new Image();
                img.src = randomImage;
                img.onload = () => {
                    garden[index].planted = true;
                    garden[index].img = img;
                    drawGarden();
                };
            } else {
                document.getElementById('message').innerText = 'The garden is full!';
            }
        }

            function drawGarden() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                garden.forEach((cell, index) => {
                    const x = (index % grid) * gridSize;
                    const y = Math.floor(index / grid) * gridSize;
                    if (cell.planted && cell.img) {
                        ctx.drawImage(cell.img, x, y, gridSize, gridSize);
                    }
                });
            }

            function clearGarden() {
                garden.forEach(cell => {
                    cell.planted = false;
                    cell.img = null;
                });
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                document.getElementById('message').innerText = '';
            }

            // Attach event listeners to buttons
            document.getElementById('plantButton').addEventListener('click', plantNew);
            document.getElementById('clearButton').addEventListener('click', clearGarden);
        });
    </script>
</body>
</html>
